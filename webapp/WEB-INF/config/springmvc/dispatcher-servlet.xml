<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <!-- annotation config & scan -->
    <context:annotation-config />

	<!-- 컴포넌트를 스프링 컨테이로 등록하기 위한 태그 선언 -->
    <context:component-scan base-package="spring.simple.test">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository" />
    </context:component-scan>

    <!-- JSR-303 support will be detected on classpath and enabled automatically
    <mvc:annotation-driven>
        <mvc:message-converters>

			//    이 부분은 Controller에서 일반적인 HTML을 리턴하기 위한 설정이다.
			//    JSON을 리턴하지 않을 경우는 Default 값으로 지정 되어 있기 때문에 설정 할 필요 없지만,
			//    JSON 리턴과 HTML 리턴을 모두 하려면은 명시적으로 설정 해 줘야 한다.

            <bean class="org.springframework.http.converter.FormHttpMessageConverter">
                <property name="charset">
                    <bean class="java.nio.charset.Charset" factory-method="forName">
                        <constructor-arg value="UTF-8" />
                    </bean>
                </property>
            </bean>
            // Controller에서 JSON 리턴시 객체를 변환 해주기 위해서 MessageConverter가 필요하다.
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes" value="application/json;charset=UTF-8" />
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
 -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter ">
	    <property name="messageConverters">
	        <list>
	            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" >
	                <property name="supportedMediaTypes">
		                <list>
		                    <value>text/html;charset=UTF-8</value>
		                    <value>application/json;charset=UTF-8</value>
		                </list>
		            </property>
	            </bean>
	        </list>
	    </property>
	</bean>

    <!-- view resolver -->
	<!-- <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" /> -->
    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"> 
		<property name="order" value="0"/> 
	</bean>
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/jsp/" />
        <property name="suffix" value=".jsp" />
        <property name="order" value="2" />
    </bean>
</beans>
